@page "/"
@inject IBookRepository BookRepository
@inject IDictionaryRepository DictionaryRepository
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Strona główna katalogu biblioteki SP 123 w Testach</PageTitle>

@foreach (var tag in BooksByTag.Keys)
{
    <div class="card shadow mb-4 p-4">
        <div class="mb-4 px-2">
            <h2 class="fw-bold theme-font-col-pri">@tag</h2>
        </div>

        <div class="carousel-wrapper px-2" id="carousel-@tag">
            <button class="carousel-btn left" @onclick="() => Scroll(tag, -1)">&#10094;</button>

            <div class="carousel-container">
                @foreach (var book in BooksByTag[tag])
                {
                    <a href="/view/@book.Id?returnUrl=/" class="book-card text-decoration-none text-dark">
                        <div class="book-cover-container">
                            <img src="@book.ImageUrl" alt="@book.Title" class="book-cover"/>
                        </div>
                        <div class="book-title theme-font-col-pri">@book.Title</div>
                    </a>
                }
            </div>

            <button class="carousel-btn right" @onclick="() => Scroll(tag, 1)">&#10095;</button>
        </div>
    </div>
}

@code {
    private Dictionary<string, IEnumerable<BookGetDto>> BooksByTag = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("applyUserPreferences");
        }
    }
    
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        var tags = await DictionaryRepository.GetBookSpecialTagsAsync();

        foreach (var tag in tags)
        {
            var books = await BookRepository.GetBooksByTagAsync(tag.Title);
            BooksByTag[tag.Title] = books;
        }
    }

    private async Task Scroll(string tag, int direction)
    {
        await JS.InvokeVoidAsync("scrollCarousel", $"carousel-{tag}", direction);
    }
}

